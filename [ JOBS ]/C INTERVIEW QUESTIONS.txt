	
 


==============================================================================================================
	
	What is the project/team I am going to join working on?
	
	What is the on-boarding process like?
	
	What are the best things about working in this company? (What do you like most about working here?)
	
	Timings, Work-Life Balance?
	
	Tell HR that once I have offer letter I can go for NP and join 1 month after that. 
	wait after HRs discussion and if they don't provide letter within 2 days u should ask them
	Keep taking updates with HR till offer letter is sent
	
	Depends on offer in hand...koi offer hoga to uske uper 2-3Lakh bol do, Nhi to 10.5-11
	
	HR me to salary structure and fixed amount puchh lena
	
	PF ka ki sara PF salary me se jayega ya half
	 
	joining bonus
	
	Ctc and extra benefits + ask hr ki in hand kitna ayega... Sbse imp h.. bcz sbka apna apna deduction hota h
	
	Future opportunities
	
	And promotions/salary hike me koi limits and restrictions (Like cdac.. ki max 10% hi hoga ya kuch)
	
	Probation period and notice period bhi pta kr lena
	

	CTC goes to 14 as Accenture has 21% variable portion
	ask for 12, Bcuz first switch and u have stability of 3.7 yrs


	CTC = Gross Salary + PF + Gratuity
	Gross Salary = Basic Salary + HRA + Other Allowances
	Net Salary = Basic Salary + HRA + Allowances - Income Tax - Employer's Provident Fund - Professional Tax
	
	
	
		https://www.ambitionbox.com/profile/senior-firmware-engineer-salary
	
==============================================================================================================	

	Amazon Development Centre India Private Limited
 	Technology park in Pune, Maharashtra
	Address: B-2, Nagar Rd, Somnath Nagar, Wadgaon Sheri, Pune, Maharashtra 411014
 
==============================================================================================================
	
	Software Engineer, Embedded Systems - GOOGLE, BLR
	https://careers.google.com/jobs/results/130165325015458502-software-engineer-embedded-systems/
	
	https://careers.google.com/jobs/results/130165325015458502/
	
	https://careers.google.com/jobs/results/?distance=50&location=India&q=EMBEDDED%20SYSTEMS
	
	https://www.google.com/search?client=firefox-b-d&q=Embedded+System+Software+Engineer+at+Google
	
	https://www.linkedin.com/jobs/search/?currentJobId=2515728276&keywords=google%20embedded%20software%20engineer&originalSubdomain=in
	
	https://opensource.google/
	https://github.com/google
	
	Minimum qualifications:
• Bachelor's degree in Computer Science, or equivalent practical experience.
• 5 years of work experience in consumer electronics/embedded systems design.
• Experience with embedded programming in C/C++

Preferred qualifications:
• Foundation/experience in computer science, with strong competencies in data structures, algorithms, and software design.
• Experience in Electronics, or Software development related to Hardware.
• Experience working with processors and GPU programming.
• Performance analysis and optimization experience.
• Demonstrated knowledge of embedded systems development, RTOS concepts, device drivers and hardware/software integration.
• Knowledge of ARM or x86 assembly, system BIOS, Linux kernel, device drivers.

Our products need to handle information at massive scale, and extend well beyond web search. We're looking for engineers who bring fresh ideas from all areas, including information retrieval, distributed computing, large-scale system design, networking and data storage, security, artificial intelligence, natural language processing, UI design and mobile; the list goes on and is growing every day. As a software engineer, you will work on a specific project critical to Google’s needs with opportunities to switch teams and projects as you and our fast-paced business grow and evolve. We need our engineers to be versatile, display leadership qualities and be enthusiastic to take on new problems across the full-stack as we continue to push technology forward.

As a Software Engineer, Embedded Systems, you'll work on hardware and software. We are a vertically integrated team spanning from hardware through applications.

Google's mission is to organize the world's information and make it universally accessible and useful. Our team combines the best of Google AI, Software, and Hardware to create radically helpful experiences.

Responsibilities
• Work to enable applications for devices.
• Develop new software, hardware, and system architecture to support future applications.


    Piyush Itankar
	Embedded System Software Engineer at Google 
	https://www.linkedin.com/in/itankar/
	
	FPGA: From ground up!
	https://www.linkedin.com/pulse/fpga-from-ground-up-piyush-itankar/
	
	Walk through: FPGA development flow
	https://www.youtube.com/watch?v=JNtI0uCDfow
	
	FPGA: How it looks inside : The LUTs
	https://www.linkedin.com/pulse/fpga-how-looks-inside-luts-piyush-itankar/
	
	LATTICE SEMICONDUCTOR ICE40HX1K-STICK-EVN iCE Stick Evaluation Board for the iCE40HX1K FPGA
	
	ICE40HX1K-STICK-EVN ₹3,694.43/-
	https://www.mouser.in/ProductDetail/Lattice/ICE40HX1K-STICK-EVN?qs=hJ2CX3hEdVEyBLaHAEXelA%3D%3D
	
	ICE40HX1K-STICK-EVN
	https://in.element14.com/lattice-semiconductor/ice40hx1k-stick-evn/ice40-hx1k-icestick-eval-kit/dp/2355207
	
	https://www.amazon.in/LATTICE-SEMICONDUCTOR-ICE40HX1K-STICK-EVN-Evaluation-iCE40HX1K/dp/B00R3QU9K0
	
	RED-V RedBoard - SiFive RISC-V FE310 SoC (SparkFun USA) Rs 2699/- (Excluding GST.)
	https://www.rhydolabz.com/arduino-compatible-boards-boards-similar-to-arduino-c-152_215/redv-redboard-sifive-riscv-fe310-soc-sparkfun-usa-p-2798.html
	https://www.sparkfun.com/products/15594
	https://github.com/pitankar/riscv-sw
	https://github.com/riscv-rust/hifive1-recover
	
[Google]
I spend most of my time writing lower level C code (sometimes assembly code as needed), OS kernel code, browsing driver code bases, reading IP specs, reverse engineering and spreading the learnings with my teammates :)

[Intel]
I worked as a Embedded Software Engineer, implementing drivers and stack for Bluetooth (Primarily  in C and Python). I've also coded firmware modules (memory manager and some math algorithms) for a GNSS chip during my internship at Intel. And, lately I've been studying the Bluetooth RF chain and developing a software tool to control the RF Peripheral registers of the controller discretely. I am comfortable working both with software and hardware design/development.

I am personally interested in Hardware-Software co-design/development for solutions which need to be scalable, fast and maintainable using RISCV/ARM, FPGA(verilog/system verilog), Linux and C (or assembly, C++, Python). I am comfortable working with huge code bases. I like working in teams and on projects that involve a multi-disciplinary touch (System level, Hardware level, firmware level etc).

[Others]
I spend most of my free time digging into Software-Hardware Design. You can browse through few of my projects (put on github):

1. 32 Bit MIPS Processor design and Implementation for DE1Soc FPGA (under active development): Implements the minimum MIPS ISA for a 32 bit single cycle processor. git: https://github.com/pitankar/mips-cpu

2. OS Implementation for a 32 bit ARM Controller (under active development): Implements a scheduler 
for ARM Cortex M4 processors in C. git: https://github.com/pitankar/arm-rtos

3. Random Hardware design implementation for FPGA: git: https://github.com/pitankar/FPGA-Designs

Find all my previous projects on the links below:
Github: https://github.com/pitankar
GitLab: https://gitlab.com/users/pitankar/projects	

	
==============================================================================================================
	
    Gajanan Jewalikar - Manager at Capgemini India 
	gajanan.jewalikar@capgemini.com
	https://www.linkedin.com/in/gajanan-jewalikar-27b18018/
	
	MCU arch. -> Harvard vs Von Neumann Arch. -> 8051?
	
	Embedded C Memory Map -> .text, .data, .bss
	Storage Class - auto, static, register, extern
	
	volatile int *p; p?? // ptr to volatile int
	
	C keywords -> const volatile int ??
	
	Can a breakpoint be inserted in ISR?  
	
	MCU Debugging 
	
	Code compilation steps
	
	Communication Protocol, Buses -> SPI, CAN
	Memory Mgmt. -> SRAM, E2PROM, Flash,
	 
		
	
	J1939 vs CAN 
	CAN Std. vs CAN Extd.
	Cables used for CAN
	
	
	practical intro to SAE J1939?
	https://www.csselectronics.com/screen/page/simple-intro-j1939-explained/language/en

	SAE J1939 vs. CAN Bus - Physical Layer And Higher Layer Protocol (HLP)
	https://copperhilltech.com/blog/sae-j1939-vs-can-bus-physical-layer-and-higher-layer-protocol-hlp/
	https://copperhilltech.com/a-brief-introduction-to-controller-area-network/
	https://copperhilltech.com/a-brief-introduction-to-the-sae-j1939-protocol/
	
	https://automotiveembeddedsite.wordpress.com/can-j1939/
	https://tractorhacking.github.io/documentation/TechNotesJ1939.html
	
	
	John Deere Interview Questions geeksforgeeks
	JOHN DEERE j1939 protocol interview questions	
	
	
==============================================================================================================

	L&T interview - Embedded C++, RTOS - Asif Ahmed, Vipul Kute, Paricherla Priyanka
	Project -> STM32, ESP32 - driver - middleware (firmware changes with MCU)
	
	
	Vipul Kute - Senior Engineer - L&T Technology Services  
	https://in.linkedin.com/in/vipul-kute-70b930136


	bit-banging -> UART?

	explain SPI driver working to access multiple SPI slave devices 

	watchdog reset - which routine has caused -> how to know/debug?

	when polling is better than interrupt? (for multiple switches/keypad)
	
	how to detect switch press & perform switch debouncing using Counter?

	polymorphism - types? 

	overloading vs overwriting?

	static function -> can is use accessing class variables?

==============================================================
		
	L&T HR ROUND (SHOULD HAVE ASKED FOR 12LPA)
	============ 
		
	C++ RTOS
	INDUSTRIAL CONSUMER PRODUCT
	
	5 COMPONENTS TO SALARY -> PF, G, ALLOW
	
	L4 15K BONUS ANNUAL, SENIOR ENGG. 
	L5 VARIABLE 8-10%
	
	FREE 5LAC MEDICLAIM
	
	RELOCATION ALLOWANCE
	
	JOINING BONUS 	
	
	8.30AM-6PM
	
	5DAYS
	
	Internal Job P R - team switch
	
	L&T, DHOLE PATIL
	
	CLIENT: EATON,
	
	Priyanka Paricherla
	HR Recruiter – Talent Acquisition
	L&T TECHNOLOGY SERVICES LIMITED
	L3 Building, Manyata Embassy Business Park, 
	Nagawara Hobli, Bengaluru-560045
	Tel: +91, 8861956926
	
==============================================================================================================
	
	ACCLIVIS, BAVDHAN, PUNE
	Amol Shrotri <amol.shrotri@acclivistechnologies.com>
	Deep Darji <darjideep2811@gmail.com>
	Vikram Bhuskute <vikram.bhuskute@acclivistechnologies.com>
	
	BLUETOOTH
	=========
	
	HOW TO GET LOCATION USING BLE BEACONS?
	
	HOW DO YOU MEASURE DISTANCE USING BLE?
	
	ANY BLE SNIFFER TOOLS YOU USED?
	
	WHAT ARE THE MAIN CONFIGURATION PARAMETERS FOR BLE CONNECTION?
	
	HOW TO DEAL WITH (DETECT & RESOLVE) BLUETOOTH CONNECTION LOSS/DROP? 
	
	WORKED ON ANY CYPRESS BLE CHIPS?  
	NORDIC, TI, NXP(ECLIPSE), STM32 (CUBEMX, KEIL, CUBE IDE)
	
==============================================================================================================
	
	RTOS TASK SYNCRONIZATION MECHANISMS?
	
	HAVE YOU WRITTEN BSP FOR LINUX BASED SOC?
	
	HOW TO DESIGN A TIME CRITICAL, MEMORY CRITICAL & POWER OPTIMIZED EMBEDDED SYSTEMS?
	
	HAVE YOU USED LINKER SCRIPTS? (HOW TO PLACE A FUNCTION AT A PARTICULAR ADDRESS?)
	
	WHAT DEBUGGING TOOLS HAVE YOU USED? SEGGER, JTAG, ULINK
	
	HOW TO TURN OFF THE DIFFERENT SENSORS IN BME680? 
	I2C DRIVER FOR BME680
	
	BOOTLOADER -> FOTA -> STEPS TO CHECK & PREVENT/DEAL WITH DOWNLOADED FIRMWARE CORRUPTION
	
	ARM -> LOW POWER MODES
	
	ARM -> HARD FAULT, SEGMENTATION ERROR, MEMORY FAULT
	
	UART -> HIGH BAUD RATE SUPPORT REQUIRED -> CAN DMA BE USED TO WRITE HIGH SPEED UART DATA 
			TO MEMORY WITHOUT USING THE MCU CORE/S 
	UART -> DATA FRAME FOR INTEGRITY CHECK
	
	SPI -> HOW TO ENSURE DATA INTEGRITY (CRC) -> DATA FRAME FOR INTEGRITY CHECK
	
	I2C -> HOW TO DEAL WITH BUS-BUSY ERROR, WHICH LINE TO DEBUG
	I2C -> CLOCK STRETCHING
	
	TIMER INTERRUPTS -> HOW TO IMPLEMENT EXT. INTRPT. CALLBACK FUNCTION REGISTRATION
	
	
	METHODS TO CALIBRATE ACCELEROMETER / GYROSCOPES
	
	
==============================================================================================================

	int main(void* code) // FUNCTION TAKES ANY DATATYPE
	{
		...
		return (error_code);
	}

==============================================================================================================
	
	IMPLEMENT WITH NECESSARY ERROR CHECKING: int division(int num, int div,int * res);
	
	
	int division(int num, int div,int * res) // ALL POSSIBLE ERROR CHECKS FOR DIVISION
	{
		if(div == 0)
			return -1;			
		else
		{	if(res)
				*res = num / div;
		}
			
		return 0;	
		
	}
	
==============================================================================================================
	
	int arr[5] = {1,3,4,5,6};
	int *p[] = {arr + 4,arr + 3,arr + 2,arr + 1,arr + 0};
	int **ptr = p;
	printf(“%d %d %d”,*(arr+4),ptr+4,p+4); // ??

	
	int arr[5] = {1,3,4,5,6};
	char *p = arr;
	printf("%d",*p); // ??
	p++;
	printf("%d",*p); // ??
	
==============================================================================================================
	IMPLEMENT:	int extract_byte(int val, int byte_no);

	
	int extract_byte(int val, int byte_no)
	{
		return ((val >> (8*byte_no)) && 0xFF);	
	}
	
==============================================================================================================

	LITTLE ENDIAN
	BIG ENDIAN
	
	0xABCDEF
	
	0xEFCDAB
	
	EF
	CD
	AB
	
	USE OF VOLATILE 
==============================================================================================================
	
	// which one has smaller size -> s1 or s2 ?
	struct s1
	{	int i;
		char c;
	}
	
	struct s2 
	{	char c;
		int i;
	}
	
==============================================================================================================
	
	int p;
	static int q;
	
	void main()
	{
		int x = 0;
		static int y; 
		display(x);
	}
	
	
	void display(int x)
	{	
		printf("%d", x);
		x++;
		
		display(x);
	}
	
	WHAT WILL HAPPEN WHEN EXECUTING ABOVE CODE?
	
	0
	1
	2
	.
	.
	STACK OVERFLOW AT SOME POINT
	
	
	IN WHICH REGION OF MEMORY WOULD p, q, x, y  BE LOCATED?
	
	.code - 
	.data - initialized global / static (local)
	.bss - unintialized global / static (local)
	
	stack - local
	
============================================================================================================================================================================================================================

	WIPRO LINUX C OS QTNS - SHANTANU BANERJEE (APMEA - iDEAS-ER&D)
	
	detect/debug segmentation fault in main.c -> CORE DUMP
	
	Debugging Segmentation Faults and Pointer Problems
	https://www.cprogramming.com/debugging/segfaults.html
	
	How to debug a HardFault on an ARM Cortex-M MCU
	https://interrupt.memfault.com/blog/cortex-m-fault-debug
	https://eng.fitbit.com/the-tower-of-terror-a-bug-mystery/

	memory leak analysis tools -> Valgrind -> Memcheck -> how will you find memory leak in 1GB source code in 1 hour? 
	Memcheck: a memory error detector
	https://www.cprogramming.com/debugging/valgrind.html
	https://www.valgrind.org/docs/manual/mc-manual.html
	
	Using Valgrind to Find Memory Leaks and Invalid Memory Use
	https://www.cprogramming.com/debugging/valgrind.html
	
	Advanced Memory Management: Dynamic Allocation
	https://www.cprogramming.com/tutorial/dynamic_memory_allocation.html
	Memory and Resource Leak Detection Tools
	https://www.ics.com/blog/explore-memory-and-resource-leak-detection-tools
	
	what is cmake? what is it used for? how does it differ from makefile
	
	linux commands to add static library, header files to compile c code -> gcc compiler tools

	gdb

	kernel modules?

	ipc

	


	malloc calloc

	stack size - overflow detection / prevention

	multithreading

	task / process / thread

	mutex semaphore

	deadlock

	LINUX/Raspberry Pi : custom kernel config - boot image configuration, bootloader, root file system, 

	I2C - structure padding 

	linked list, doubled linked list

	Little-endian vs Big-Endian which is better/more compact?

	Memory paging?

	Virtual Memory Management/Location in Linux

	Memory Swap

	Scheduling Policies - Round-Robin

	OOPs concepts: Inheritance, Types Of Polymorphism?

============================================================================================================================================================================================================================
	
	LINKED LIST - NODES MAY BE STORED AT DIFFERENT LOCATIONS, UNLIKE AN ARRAY WHERE THEY ARE STORED IN CONTIGUOUS MEMORY LOCATIONS
	
	LINKED LIST VS ARRAY
	PROS:
	SIZE CAN BE CHANGED DYNAMICALLY
	INSERTION & DELETION OF NODES IS FASTER THAN FOR ARRAY
	
	CONS:
	ONLY SEQUENTIAL ACCESS
	MORE MEORY REQ. PER NODE (TO STORE THE POINTERS)
		