	
 Output of C programs | Set 64 (Pointers)
 https://www.geeksforgeeks.org/tag/c-output/
 
 TCS NQT Coding Questions and Answers
 https://www.faceprep.in/tcs/tcs-nqt-coding-questions/

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CLOCK STRETCHING

BUS ARBITRATION

INERRUPT HANDLER

BOOTING SEQ

EXPLAIN I2C, UART

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	WIPRO - C - topics

	C Preprocessor  
	C Enum n Typedef  
	C Recursive  
	C Switch n Loop  
	C Bitwise Operators
	C BitField  
	C Operators  
	C Link List  
	C Formatted Output
	C File Operations 
	C Memory Allocation
	C Variables n Scope
	C Pointers

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//WIPRO QUESTION

//WRITE AUTO BUILD DICTIONARY CODE THAT BUILDS UNIQUE WORD LIST AS NEW STRINGS OF WORDS ARE PROVIDED TO THE CODE

// INPUT : able point clue dig grip able atom clue trigger tin dig 

// OUTPUT : able point clue dig grip atom trigger tin

//Header Files
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<stdbool.h>

/* only used in string related operations */
typedef struct String string;
struct String
{
    char *str;
};

char *input(FILE *fp, int size, int has_space)
{
    int actual_size = 0;
    char str = (char *)malloc(sizeof(char)(size+actual_size));
    char ch;
    if(has_space == 1)
    {
        while(EOF != (ch=fgetc(fp)) && ch != '\n')
        {
            str[actual_size] = ch;
            actual_size++;
            if(actual_size >= size)
            {
                str = realloc(str,sizeof(char)*actual_size);
            }
        }
    }
    else
    {
        while(EOF != (ch=fgetc(fp)) && ch != '\n' && ch != ' ')
        {
            str[actual_size] = ch;
            actual_size++;
            if(actual_size >= size)
            {
                str = realloc(str,sizeof(char)*actual_size);
            }
        }
    }
    actual_size++;
    str = realloc(str,sizeof(char)*actual_size);
    str[actual_size-1] = '\0';
    return str;
}
/* only used in string related operations */


typedef struct array_single_string array_single_string;
struct array_single_string
{
	string *data;
	int size;
};


/*
 * 
 */
array_single_string  dictWords(string textInput)
{
    array_single_string  answer;
    // Write your code here


    return answer;
}

int main()
{
    string textInput;
	
    
	//input for textInput
	textInput.str = input(stdin, 6000, 1);
	
	
    
	array_single_string result = dictWords(textInput);
	for(int idx = 0; idx < result.size - 1; idx++)
	{
		printf("%s ", result.data[idx].str);
	}
	printf("%s", result.data[result.size - 1].str);
	
    return 0;
}


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Altran Americas/Aricent/Capgemini

	https://www.glassdoor.co.in/Interview/Altran-Americas-Embedded-Software-Engineer-Interview-Questions-EI_IE28187.0,15_KO16,42.htm
	https://www.glassdoor.co.in/Interview/Altran-Americas-Gurgaon-Interview-Questions-EI_IE28187.0,15_IL.16,23_IC2921225_IP9.htm
	
Linux device driver majorly kernel threads and kernel synchronization mechanism. 
Process synchronization and basic C questions. 
Interrupts sorting of an array.
Where is static variable stored?   

important topics of c language like storage classes,qualifiers,data structures,strings,static variables,global variables,
single linked list program for swap the nodes of list,swap the two numbers without using the temporary variable,

how to multiply a number with 3.5 without using *,/,% operator?   

C,C++, Data structures, OS and kernel development. 
How will you find End of a circular linked list?

 algo to delete a node in linked list, some questions on bit operators
node deletion in a linked list.
reversal of string

Data structures(linked list), Networking  
- OS basics
- Linked list
- System programming
- C basics
- N/W basics	
	
Write a C program to count how many words in a sentence.  
Explain what is I2C protocol?   	
	
kindly go through mouthshut website and search for aricent interview process before going to interview . 
Kindly ignore some hr names mentioned in the post they have written same thing what i have faced . 
Worst Interview process ever in my life . only less expectation matters . 
If you are a hard worker and money oriented then don't go there . 
They don't release offer letter and play with you . 
Manager don't take it heartily :) you don't have knowledge so 
https://www.mouthshut.com/product-reviews/Aricent-Technologies-Holdings-Ltd-reviews-925609396
https://www.mouthshut.com/review/Aricent-Technologies-Holdings-Ltd-review-qopsomnsnnn


https://gdpi.hitbullseye.com/aricent.php
data structures like queue stack tree
implement stack in java, difference between hashmap and hashtable, 
what is inheritance, difference between method overloading and ovveriding.

------------------------------------------------------------------------------------------------------------------------------------------

LG SOFT INTERVIEW QTNS - CONTROLLER DESIGN PROFILE

START UP CODE, WHAT DOES IT DO?
IS THERE ONE SINGLE STACK OR SEPARATE STACK PER FUNCTION?
CAUSES OF STACK OVERFLOW?
STATIC, VOLATILE, STACK, HEAP
WHERE ARE CONST, STATIC, VOLATILE, GLOBAL VARIABLES, CHAR STRINGS STORED IN MEMORY 
STRUCTURE VS UNION
MEMORY LEAK, NULL POINTER VS DANGLING POINTER,
WATCH DOG TIMER, TIMER INTERRUPT - USES?
MAIN DIFF. B/W I2C & SPI, MAX. NO. OF SLAVES FOR EACH PROTOCOL 
HTTP VS MQTT
CRC - DIFFERENT TYPES OF CHECKSUMS?
NFC, PYTHON, BLUEZ, RASPBERRY PI, 

WHEN TO USE CERAMIC & WHEN TO USE ELECTROLYTIC CAPACITOR?
WHEN DO YOU SINK OR SOURCE A PIN?
BUCK-BOOST CONVERTOR FOR POWER SOURCE
REVERSE POLARITY PROTECTION CKT FOR PCB
HIGH CURRENT PROTECTION CKT (FROM BATTERY)
SWITCH DEBOUCING - FOR MECHANICAL & CAP. TOUCH SWITCH? 
RDS_on OF JFET, SWITCHING FREQ. OF JFET?
NO LOAD CURRENT OF PCB BOARD? 

18650 Battery charger reverse polarity protection
	http://blog.deconinck.info/post/2017/12/22/18650-Battery-charger-reverse-polarity-protection

------------------------------------------------------------------------------------------------------------------------------------------

	VINOD JADHAV - MIRAFRA HYD
	POST: FIRMWARE VALIDATION ENGINEER (NON-DEVELOPMENTAL)
	CLIENT - XILINX, QUALCOMM, INTEL

Good in Firmware Development
-Good in C Programming  

-Optional
-Good Experinece in Bootloader/firmware 
-Good to have Experince in Linux Environment,
-Good to have testing with Python/Perl scripting

	
	code to reverse a string:
	
	#define ARRSIZE(X) sizeof(X)/sizeof(X[0])
	
	//char* strrev(char* str)
	
	char* strrevv(char *str)//, int limit)
	{
		//char str[] = "abcdef";
		int size=0; // = sizeof(str);
		
		char* s = str;
		 
		while(!*s)
		{
			++s;
			++size;
		}
		
//		int size = ARRSIZE(str); 
		char* rev = NULL;

		for(int i=0; i<size; ++i)
		{	rev[size-1-i] = str[i];
		}
		
		return rev;
	}
	
	CODE TO TURN LITTLE-ENDIAN TO BIG-ENDIAN:
	uint32_t little = 0xABCDEF12; // 0x12EFCDAB
	
	uint32_t MASK1 = 0xFF000000;
	
	unit32_t big = (little >> 24) | (0xFF);
		
	
	BOOT SEQUENCE
	
	structure padding ?? 
	
	const variable in structure -> ??
	
	static variable in structure -> No, static is defined in data segment, struct on stack -> conflict
	
	register global variable -> No, compiler wont allow as global variable would block a register for whole program life-time
	

	
	
	HOW TO TEST IF A 32 BIT DATA IS +/- -> ((A >> 31) & 1)
	
	ARM cortex arch. -> No. of registers in ARM
	


scheduling, process synchronization, inter-process communication, memory management, interrupt handling, DMAs, OS and RTOS concepts

OOP concepts, Static functions, virtual functions, virtual address and physical address, paging etc.

Atoi conversion

Delete a node from binary search tree

Algorithms, DFS, BFS, Class and inheritance, graph theory, EDA tools, C++ and STL, What is the map in STL?

reverse a linked list

Directory crawler in C++ -> Use DFS or BFS

Hex to bin in C++

Resource Acquisition Is Initialization RAII in C++

Difference between task and function, inter assignment and intra assignment statement, flipflop and latch,

Swap bits in pairs

Detect little endian vs big endian? 

What is the response time of a JK FF called?

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	
    Gajanan Jewalikar - Manager at Capgemini India 
	gajanan.jewalikar@capgemini.com
	https://www.linkedin.com/in/gajanan-jewalikar-27b18018/
	
	MCU arch. -> Harvard vs Von Neumann Arch. -> 8051?
	
	Embedded C Memory Map -> .text, .data, .bss
	Storage Class - auto, static, register, extern
	
	volatile int *p; p?? // ptr to volatile int
	
	C keywords -> const volatile int ??
	
	Can a breakpoint be inserted in ISR?  
	
	MCU Debugging 
	
	Code compilation steps
	
	Communication Protocol, Buses -> SPI, CAN
	Memory Mgmt. -> SRAM, E2PROM, Flash,
	 
		
	
	J1939 vs CAN 
	CAN Std. vs CAN Extd.
	Cables used for CAN
	
	
	practical intro to SAE J1939?
	https://www.csselectronics.com/screen/page/simple-intro-j1939-explained/language/en

	SAE J1939 vs. CAN Bus - Physical Layer And Higher Layer Protocol (HLP)
	https://copperhilltech.com/blog/sae-j1939-vs-can-bus-physical-layer-and-higher-layer-protocol-hlp/
	https://copperhilltech.com/a-brief-introduction-to-controller-area-network/
	https://copperhilltech.com/a-brief-introduction-to-the-sae-j1939-protocol/
	
	https://automotiveembeddedsite.wordpress.com/can-j1939/
	https://tractorhacking.github.io/documentation/TechNotesJ1939.html
	
	
	John Deere Interview Questions geeksforgeeks
	JOHN DEERE j1939 protocol interview questions	
	
	
==============================================================================================================

	L&T interview - Embedded C++, RTOS - Asif Ahmed, Vipul Kute, Paricherla Priyanka
	Project -> STM32, ESP32 - driver - middleware (firmware changes with MCU)
	
	
	Vipul Kute - Senior Engineer - L&T Technology Services  
	https://in.linkedin.com/in/vipul-kute-70b930136


	bit-banging -> UART?

	explain SPI driver working to access multiple SPI slave devices 

	watchdog reset - which routine has caused -> how to know/debug?

	when polling is better than interrupt? (for multiple switches/keypad)
	
	how to detect switch press & perform switch debouncing using Counter?

	polymorphism - types? 

	overloading vs overwriting?

	static function -> can is use accessing class variables?

==============================================================
		
	L&T HR ROUND (SHOULD HAVE ASKED FOR 12LPA)
	============ 
		
	C++ RTOS
	INDUSTRIAL CONSUMER PRODUCT
	
	5 COMPONENTS TO SALARY -> PF, G, ALLOW
	
	L4 15K BONUS ANNUAL, SENIOR ENGG. 
	L5 VARIABLE 8-10%
	
	FREE 5LAC MEDICLAIM
	
	RELOCATION ALLOWANCE
	
	JOINING BONUS 	
	
	8.30AM-6PM
	
	5DAYS
	
	Internal Job P R - team switch
	
	L&T, DHOLE PATIL
	
	CLIENT: EATON,
	
	Priyanka Paricherla
	HR Recruiter – Talent Acquisition
	L&T TECHNOLOGY SERVICES LIMITED
	L3 Building, Manyata Embassy Business Park, 
	Nagawara Hobli, Bengaluru-560045
	Tel: +91, 8861956926
	
==============================================================================================================
	
	ACCLIVIS, BAVDHAN, PUNE
	Amol Shrotri <amol.shrotri@acclivistechnologies.com>
	Deep Darji <darjideep2811@gmail.com>
	Vikram Bhuskute <vikram.bhuskute@acclivistechnologies.com>
	
	BLUETOOTH
	=========
	
	HOW TO GET LOCATION USING BLE BEACONS?
	
	HOW DO YOU MEASURE DISTANCE USING BLE?
	
	ANY BLE SNIFFER TOOLS YOU USED?
	
	WHAT ARE THE MAIN CONFIGURATION PARAMETERS FOR BLE CONNECTION?
	
	HOW TO DEAL WITH (DETECT & RESOLVE) BLUETOOTH CONNECTION LOSS/DROP? 
	
	WORKED ON ANY CYPRESS BLE CHIPS?  
	NORDIC, TI, NXP(ECLIPSE), STM32 (CUBEMX, KEIL, CUBE IDE)
	
==============================================================================================================
	
	RTOS TASK SYNCRONIZATION MECHANISMS?
	
	HAVE YOU WRITTEN BSP FOR LINUX BASED SOC?
	
	HOW TO DESIGN A TIME CRITICAL, MEMORY CRITICAL & POWER OPTIMIZED EMBEDDED SYSTEMS?
	
	HAVE YOU USED LINKER SCRIPTS? (HOW TO PLACE A FUNCTION AT A PARTICULAR ADDRESS?)
	
	WHAT DEBUGGING TOOLS HAVE YOU USED? SEGGER, JTAG, ULINK
	
	HOW TO TURN OFF THE DIFFERENT SENSORS IN BME680? 
	I2C DRIVER FOR BME680
	
	BOOTLOADER -> FOTA -> STEPS TO CHECK & PREVENT/DEAL WITH DOWNLOADED FIRMWARE CORRUPTION
	
	ARM -> LOW POWER MODES
	
	ARM -> HARD FAULT, SEGMENTATION ERROR, MEMORY FAULT
	
	UART -> HIGH BAUD RATE SUPPORT REQUIRED -> CAN DMA BE USED TO WRITE HIGH SPEED UART DATA 
			TO MEMORY WITHOUT USING THE MCU CORE/S 
	UART -> DATA FRAME FOR INTEGRITY CHECK
	
	SPI -> HOW TO ENSURE DATA INTEGRITY (CRC) -> DATA FRAME FOR INTEGRITY CHECK
	
	I2C -> HOW TO DEAL WITH BUS-BUSY ERROR, WHICH LINE TO DEBUG
	I2C -> CLOCK STRETCHING
	
	TIMER INTERRUPTS -> HOW TO IMPLEMENT EXT. INTRPT. CALLBACK FUNCTION REGISTRATION
	
	
	METHODS TO CALIBRATE ACCELEROMETER / GYROSCOPES
	
	
==============================================================================================================

	int main(void* code) // FUNCTION TAKES ANY DATATYPE
	{
		...
		return (error_code);
	}

==============================================================================================================
	
	IMPLEMENT WITH NECESSARY ERROR CHECKING: int division(int num, int div,int * res);
	
	
	int division(int num, int div,int * res) // ALL POSSIBLE ERROR CHECKS FOR DIVISION
	{
		if(div == 0)
			return -1;			
		else
		{	if(res)
				*res = num / div;
		}
			
		return 0;	
		
	}
	
==============================================================================================================
	
	int arr[5] = {1,3,4,5,6};
	int *p[] = {arr + 4,arr + 3,arr + 2,arr + 1,arr + 0};
	int **ptr = p;
	printf(“%d %d %d”,*(arr+4),ptr+4,p+4); // ??

	
	int arr[5] = {1,3,4,5,6};
	char *p = arr;
	printf("%d",*p); // ??
	p++;
	printf("%d",*p); // ??
	
==============================================================================================================
	IMPLEMENT:	int extract_byte(int val, int byte_no);

	
	int extract_byte(int val, int byte_no)
	{
		return ((val >> (8*byte_no)) && 0xFF);	
	}
	
==============================================================================================================

	LITTLE ENDIAN
	BIG ENDIAN
	
	0xABCDEF
	
	0xEFCDAB
	
	EF
	CD
	AB
	
	USE OF VOLATILE 
==============================================================================================================
	
	// which one has smaller size -> s1 or s2 ?
	struct s1
	{	int i;
		char c;
	}
	
	struct s2 
	{	char c;
		int i;
	}
	
==============================================================================================================
	
	int p;
	static int q;
	
	void main()
	{
		int x = 0;
		static int y; 
		display(x);
	}
	
	
	void display(int x)
	{	
		printf("%d", x);
		x++;
		
		display(x);
	}
	
	WHAT WILL HAPPEN WHEN EXECUTING ABOVE CODE?
	
	0
	1
	2
	.
	.
	STACK OVERFLOW AT SOME POINT
	
	
	IN WHICH REGION OF MEMORY WOULD p, q, x, y  BE LOCATED?
	
	.code - 
	.data - initialized global / static (local)
	.bss - unintialized global / static (local)
	
	stack - local
	
============================================================================================================================================================================================================================

	WIPRO LINUX C OS QTNS - SHANTANU BANERJEE (APMEA - iDEAS-ER&D)
	
	detect/debug segmentation fault in main.c -> CORE DUMP
	
	Debugging Segmentation Faults and Pointer Problems
	https://www.cprogramming.com/debugging/segfaults.html
	
	How to debug a HardFault on an ARM Cortex-M MCU
	https://interrupt.memfault.com/blog/cortex-m-fault-debug
	https://eng.fitbit.com/the-tower-of-terror-a-bug-mystery/

	memory leak analysis tools -> Valgrind -> Memcheck -> how will you find memory leak in 1GB source code in 1 hour? 
	Memcheck: a memory error detector
	https://www.cprogramming.com/debugging/valgrind.html
	https://www.valgrind.org/docs/manual/mc-manual.html
	
	Using Valgrind to Find Memory Leaks and Invalid Memory Use
	https://www.cprogramming.com/debugging/valgrind.html
	
	Advanced Memory Management: Dynamic Allocation
	https://www.cprogramming.com/tutorial/dynamic_memory_allocation.html
	Memory and Resource Leak Detection Tools
	https://www.ics.com/blog/explore-memory-and-resource-leak-detection-tools
	
	what is cmake? what is it used for? how does it differ from makefile
	
	linux commands to add static library, header files to compile c code -> gcc compiler tools

	gdb

	kernel modules?

	ipc

	


	malloc calloc

	stack size - overflow detection / prevention

	multithreading

	task / process / thread

	mutex semaphore

	deadlock

	LINUX/Raspberry Pi : custom kernel config - boot image configuration, bootloader, root file system, 

	I2C - structure padding 

	linked list, doubled linked list

	Little-endian vs Big-Endian which is better/more compact?

	Memory paging?

	Virtual Memory Management/Location in Linux

	Memory Swap

	Scheduling Policies - Round-Robin

	OOPs concepts: Inheritance, Types Of Polymorphism?

============================================================================================================================================================================================================================
	
	LINKED LIST - NODES MAY BE STORED AT DIFFERENT LOCATIONS, UNLIKE AN ARRAY WHERE THEY ARE STORED IN CONTIGUOUS MEMORY LOCATIONS
	
	LINKED LIST VS ARRAY
	PROS:
	SIZE CAN BE CHANGED DYNAMICALLY
	INSERTION & DELETION OF NODES IS FASTER THAN FOR ARRAY
	
	CONS:
	ONLY SEQUENTIAL ACCESS
	MORE MEORY REQ. PER NODE (TO STORE THE POINTERS)
		